// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.3
// source: searcher.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddressSubscriptionV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"` // List of events to subscribe to.
}

func (x *AddressSubscriptionV0) Reset() {
	*x = AddressSubscriptionV0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressSubscriptionV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressSubscriptionV0) ProtoMessage() {}

func (x *AddressSubscriptionV0) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressSubscriptionV0.ProtoReflect.Descriptor instead.
func (*AddressSubscriptionV0) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{0}
}

func (x *AddressSubscriptionV0) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type WorkchainSubscriptionV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkchainId int32 `protobuf:"varint,1,opt,name=workchain_id,json=workchainId,proto3" json:"workchain_id,omitempty"` // workchain id
}

func (x *WorkchainSubscriptionV0) Reset() {
	*x = WorkchainSubscriptionV0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkchainSubscriptionV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkchainSubscriptionV0) ProtoMessage() {}

func (x *WorkchainSubscriptionV0) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkchainSubscriptionV0.ProtoReflect.Descriptor instead.
func (*WorkchainSubscriptionV0) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{1}
}

func (x *WorkchainSubscriptionV0) GetWorkchainId() int32 {
	if x != nil {
		return x.WorkchainId
	}
	return 0
}

type WorkchainShardSubscriptionV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkchainId int32  `protobuf:"varint,1,opt,name=workchain_id,json=workchainId,proto3" json:"workchain_id,omitempty"` // workchain id
	Shard       []byte `protobuf:"bytes,2,opt,name=shard,proto3" json:"shard,omitempty"`                                 // shard id
}

func (x *WorkchainShardSubscriptionV0) Reset() {
	*x = WorkchainShardSubscriptionV0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkchainShardSubscriptionV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkchainShardSubscriptionV0) ProtoMessage() {}

func (x *WorkchainShardSubscriptionV0) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkchainShardSubscriptionV0.ProtoReflect.Descriptor instead.
func (*WorkchainShardSubscriptionV0) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{2}
}

func (x *WorkchainShardSubscriptionV0) GetWorkchainId() int32 {
	if x != nil {
		return x.WorkchainId
	}
	return 0
}

func (x *WorkchainShardSubscriptionV0) GetShard() []byte {
	if x != nil {
		return x.Shard
	}
	return nil
}

type ExternalOutMessageBodyOpcodeSubscriptionV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkchainId int32  `protobuf:"varint,1,opt,name=workchain_id,json=workchainId,proto3" json:"workchain_id,omitempty"` // workchain id
	Shard       []byte `protobuf:"bytes,2,opt,name=shard,proto3,oneof" json:"shard,omitempty"`                           // shard id
	Opcode      int32  `protobuf:"varint,3,opt,name=opcode,proto3" json:"opcode,omitempty"`                              // opcode
}

func (x *ExternalOutMessageBodyOpcodeSubscriptionV0) Reset() {
	*x = ExternalOutMessageBodyOpcodeSubscriptionV0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalOutMessageBodyOpcodeSubscriptionV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalOutMessageBodyOpcodeSubscriptionV0) ProtoMessage() {}

func (x *ExternalOutMessageBodyOpcodeSubscriptionV0) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalOutMessageBodyOpcodeSubscriptionV0.ProtoReflect.Descriptor instead.
func (*ExternalOutMessageBodyOpcodeSubscriptionV0) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{3}
}

func (x *ExternalOutMessageBodyOpcodeSubscriptionV0) GetWorkchainId() int32 {
	if x != nil {
		return x.WorkchainId
	}
	return 0
}

func (x *ExternalOutMessageBodyOpcodeSubscriptionV0) GetShard() []byte {
	if x != nil {
		return x.Shard
	}
	return nil
}

func (x *ExternalOutMessageBodyOpcodeSubscriptionV0) GetOpcode() int32 {
	if x != nil {
		return x.Opcode
	}
	return 0
}

type InternalMessageBodyOpcodeSubscriptionV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkchainId int32  `protobuf:"varint,1,opt,name=workchain_id,json=workchainId,proto3" json:"workchain_id,omitempty"` // workchain id
	Shard       []byte `protobuf:"bytes,2,opt,name=shard,proto3,oneof" json:"shard,omitempty"`                           // shard id
	Opcode      int32  `protobuf:"varint,3,opt,name=opcode,proto3" json:"opcode,omitempty"`                              // opcode
}

func (x *InternalMessageBodyOpcodeSubscriptionV0) Reset() {
	*x = InternalMessageBodyOpcodeSubscriptionV0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalMessageBodyOpcodeSubscriptionV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalMessageBodyOpcodeSubscriptionV0) ProtoMessage() {}

func (x *InternalMessageBodyOpcodeSubscriptionV0) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalMessageBodyOpcodeSubscriptionV0.ProtoReflect.Descriptor instead.
func (*InternalMessageBodyOpcodeSubscriptionV0) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{4}
}

func (x *InternalMessageBodyOpcodeSubscriptionV0) GetWorkchainId() int32 {
	if x != nil {
		return x.WorkchainId
	}
	return 0
}

func (x *InternalMessageBodyOpcodeSubscriptionV0) GetShard() []byte {
	if x != nil {
		return x.Shard
	}
	return nil
}

func (x *InternalMessageBodyOpcodeSubscriptionV0) GetOpcode() int32 {
	if x != nil {
		return x.Opcode
	}
	return 0
}

// Mempool subscription message, allowing subscriptions by package, object, or address.
type MempoolSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Subscription:
	//
	//	*MempoolSubscription_Addresses
	//	*MempoolSubscription_Workchain
	//	*MempoolSubscription_WorkchainShard
	//	*MempoolSubscription_ExternalOutMessageBodyOpcode
	//	*MempoolSubscription_InternalMessageBodyOpcode
	Subscription isMempoolSubscription_Subscription `protobuf_oneof:"subscription"`
}

func (x *MempoolSubscription) Reset() {
	*x = MempoolSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MempoolSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MempoolSubscription) ProtoMessage() {}

func (x *MempoolSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MempoolSubscription.ProtoReflect.Descriptor instead.
func (*MempoolSubscription) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{5}
}

func (m *MempoolSubscription) GetSubscription() isMempoolSubscription_Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (x *MempoolSubscription) GetAddresses() *AddressSubscriptionV0 {
	if x, ok := x.GetSubscription().(*MempoolSubscription_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *MempoolSubscription) GetWorkchain() *WorkchainSubscriptionV0 {
	if x, ok := x.GetSubscription().(*MempoolSubscription_Workchain); ok {
		return x.Workchain
	}
	return nil
}

func (x *MempoolSubscription) GetWorkchainShard() *WorkchainShardSubscriptionV0 {
	if x, ok := x.GetSubscription().(*MempoolSubscription_WorkchainShard); ok {
		return x.WorkchainShard
	}
	return nil
}

func (x *MempoolSubscription) GetExternalOutMessageBodyOpcode() *ExternalOutMessageBodyOpcodeSubscriptionV0 {
	if x, ok := x.GetSubscription().(*MempoolSubscription_ExternalOutMessageBodyOpcode); ok {
		return x.ExternalOutMessageBodyOpcode
	}
	return nil
}

func (x *MempoolSubscription) GetInternalMessageBodyOpcode() *InternalMessageBodyOpcodeSubscriptionV0 {
	if x, ok := x.GetSubscription().(*MempoolSubscription_InternalMessageBodyOpcode); ok {
		return x.InternalMessageBodyOpcode
	}
	return nil
}

type isMempoolSubscription_Subscription interface {
	isMempoolSubscription_Subscription()
}

type MempoolSubscription_Addresses struct {
	Addresses *AddressSubscriptionV0 `protobuf:"bytes,1,opt,name=addresses,proto3,oneof"` // Subscribe to mempool messages involving specific addresses.
}

type MempoolSubscription_Workchain struct {
	Workchain *WorkchainSubscriptionV0 `protobuf:"bytes,2,opt,name=workchain,proto3,oneof"` // Subscribe to mempool messages happened in specific workchain.
}

type MempoolSubscription_WorkchainShard struct {
	WorkchainShard *WorkchainShardSubscriptionV0 `protobuf:"bytes,3,opt,name=workchainShard,proto3,oneof"` // Subscribe to mempool messages happened in specific shard of workchain.
}

type MempoolSubscription_ExternalOutMessageBodyOpcode struct {
	ExternalOutMessageBodyOpcode *ExternalOutMessageBodyOpcodeSubscriptionV0 `protobuf:"bytes,4,opt,name=externalOutMessageBodyOpcode,proto3,oneof"` // Subscribe to mempool outging internal messages matching opcode.
}

type MempoolSubscription_InternalMessageBodyOpcode struct {
	InternalMessageBodyOpcode *InternalMessageBodyOpcodeSubscriptionV0 `protobuf:"bytes,5,opt,name=internalMessageBodyOpcode,proto3,oneof"` // Subscribe to mempool outging internal messages matching opcode.
}

func (*MempoolSubscription_Addresses) isMempoolSubscription_Subscription() {}

func (*MempoolSubscription_Workchain) isMempoolSubscription_Subscription() {}

func (*MempoolSubscription_WorkchainShard) isMempoolSubscription_Subscription() {}

func (*MempoolSubscription_ExternalOutMessageBodyOpcode) isMempoolSubscription_Subscription() {}

func (*MempoolSubscription_InternalMessageBodyOpcode) isMempoolSubscription_Subscription() {}

// Response message for sending a bundle.
type SendBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the sent bundle.
}

func (x *SendBundleResponse) Reset() {
	*x = SendBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBundleResponse) ProtoMessage() {}

func (x *SendBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBundleResponse.ProtoReflect.Descriptor instead.
func (*SendBundleResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{6}
}

func (x *SendBundleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message to get the tip address.
type GetTipAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTipAddressesRequest) Reset() {
	*x = GetTipAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTipAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipAddressesRequest) ProtoMessage() {}

func (x *GetTipAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetTipAddressesRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{7}
}

// Response message containing the tip addresses.
type GetTipAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"` // List of tip addresses.
}

func (x *GetTipAddressesResponse) Reset() {
	*x = GetTipAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTipAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipAddressesResponse) ProtoMessage() {}

func (x *GetTipAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetTipAddressesResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{8}
}

func (x *GetTipAddressesResponse) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

// Request message for subscribing to bundle results.
type SubscribeBundleResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeBundleResultsRequest) Reset() {
	*x = SubscribeBundleResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeBundleResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeBundleResultsRequest) ProtoMessage() {}

func (x *SubscribeBundleResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeBundleResultsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeBundleResultsRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{9}
}

// Message indicating a bundle won an auction.
type BundleResultAuctionWin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionId           string `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`                                  // ID of the auction.
	EstimatedNanotonTip uint64 `protobuf:"varint,2,opt,name=estimated_nanoton_tip,json=estimatedNanotonTip,proto3" json:"estimated_nanoton_tip,omitempty"` // Estimated tip amount.
}

func (x *BundleResultAuctionWin) Reset() {
	*x = BundleResultAuctionWin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultAuctionWin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultAuctionWin) ProtoMessage() {}

func (x *BundleResultAuctionWin) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultAuctionWin.ProtoReflect.Descriptor instead.
func (*BundleResultAuctionWin) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{10}
}

func (x *BundleResultAuctionWin) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *BundleResultAuctionWin) GetEstimatedNanotonTip() uint64 {
	if x != nil {
		return x.EstimatedNanotonTip
	}
	return 0
}

// Message indicating a bundle lost an auction.
type BundleResultAuctionLoose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionId string `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"` // ID of the auction.
}

func (x *BundleResultAuctionLoose) Reset() {
	*x = BundleResultAuctionLoose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultAuctionLoose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultAuctionLoose) ProtoMessage() {}

func (x *BundleResultAuctionLoose) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultAuctionLoose.ProtoReflect.Descriptor instead.
func (*BundleResultAuctionLoose) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{11}
}

func (x *BundleResultAuctionLoose) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

// Message indicating a bundle was partially processed.
type BundleResultPartiallyProcessed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionId string   `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"` // ID of the auction.
	Digest    [][]byte `protobuf:"bytes,2,rep,name=digest,proto3" json:"digest,omitempty"`                        // Digests of the processed messages.
}

func (x *BundleResultPartiallyProcessed) Reset() {
	*x = BundleResultPartiallyProcessed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultPartiallyProcessed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultPartiallyProcessed) ProtoMessage() {}

func (x *BundleResultPartiallyProcessed) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultPartiallyProcessed.ProtoReflect.Descriptor instead.
func (*BundleResultPartiallyProcessed) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{12}
}

func (x *BundleResultPartiallyProcessed) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *BundleResultPartiallyProcessed) GetDigest() [][]byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

// Message indicating a bundle partially expired.
type BundleResultPartiallyExpired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionId string   `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"` // ID of the auction.
	Digest    [][]byte `protobuf:"bytes,2,rep,name=digest,proto3" json:"digest,omitempty"`                        // Digests of the expired messages.
}

func (x *BundleResultPartiallyExpired) Reset() {
	*x = BundleResultPartiallyExpired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultPartiallyExpired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultPartiallyExpired) ProtoMessage() {}

func (x *BundleResultPartiallyExpired) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultPartiallyExpired.ProtoReflect.Descriptor instead.
func (*BundleResultPartiallyExpired) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{13}
}

func (x *BundleResultPartiallyExpired) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *BundleResultPartiallyExpired) GetDigest() [][]byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

// Message indicating a bundle was interrupted.
type BundleResultInterrupted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnAuction bool `protobuf:"varint,1,opt,name=on_auction,json=onAuction,proto3" json:"on_auction,omitempty"` // Whether the bundle was on auction.
	// Types that are assignable to Reason:
	//
	//	*BundleResultInterrupted_PartiallyProcessed
	//	*BundleResultInterrupted_Expired
	Reason isBundleResultInterrupted_Reason `protobuf_oneof:"reason"`
}

func (x *BundleResultInterrupted) Reset() {
	*x = BundleResultInterrupted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultInterrupted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultInterrupted) ProtoMessage() {}

func (x *BundleResultInterrupted) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultInterrupted.ProtoReflect.Descriptor instead.
func (*BundleResultInterrupted) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{14}
}

func (x *BundleResultInterrupted) GetOnAuction() bool {
	if x != nil {
		return x.OnAuction
	}
	return false
}

func (m *BundleResultInterrupted) GetReason() isBundleResultInterrupted_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (x *BundleResultInterrupted) GetPartiallyProcessed() *BundleResultPartiallyProcessed {
	if x, ok := x.GetReason().(*BundleResultInterrupted_PartiallyProcessed); ok {
		return x.PartiallyProcessed
	}
	return nil
}

func (x *BundleResultInterrupted) GetExpired() *BundleResultPartiallyExpired {
	if x, ok := x.GetReason().(*BundleResultInterrupted_Expired); ok {
		return x.Expired
	}
	return nil
}

type isBundleResultInterrupted_Reason interface {
	isBundleResultInterrupted_Reason()
}

type BundleResultInterrupted_PartiallyProcessed struct {
	PartiallyProcessed *BundleResultPartiallyProcessed `protobuf:"bytes,2,opt,name=partially_processed,json=partiallyProcessed,proto3,oneof"` // Partially processed bundle result.
}

type BundleResultInterrupted_Expired struct {
	Expired *BundleResultPartiallyExpired `protobuf:"bytes,3,opt,name=expired,proto3,oneof"` // Partially expired bundle result.
}

func (*BundleResultInterrupted_PartiallyProcessed) isBundleResultInterrupted_Reason() {}

func (*BundleResultInterrupted_Expired) isBundleResultInterrupted_Reason() {}

// Message indicating a bundle auction failed due to an estimate error.
type BundleResultAuctionFailedEstimate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionId string `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"` // ID of the auction.
	Digest    []byte `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`                        // Digest of the failed message.
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                      // Error message.
}

func (x *BundleResultAuctionFailedEstimate) Reset() {
	*x = BundleResultAuctionFailedEstimate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultAuctionFailedEstimate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultAuctionFailedEstimate) ProtoMessage() {}

func (x *BundleResultAuctionFailedEstimate) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultAuctionFailedEstimate.ProtoReflect.Descriptor instead.
func (*BundleResultAuctionFailedEstimate) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{15}
}

func (x *BundleResultAuctionFailedEstimate) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *BundleResultAuctionFailedEstimate) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *BundleResultAuctionFailedEstimate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message indicating a bundle auction failed due to an internal error.
type BundleResultInternalError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionId string   `protobuf:"bytes,1,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"` // ID of the auction.
	Digest    [][]byte `protobuf:"bytes,2,rep,name=digest,proto3" json:"digest,omitempty"`                        // Digests of the messages involved.
	Message   string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                      // Error message.
}

func (x *BundleResultInternalError) Reset() {
	*x = BundleResultInternalError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultInternalError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultInternalError) ProtoMessage() {}

func (x *BundleResultInternalError) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultInternalError.ProtoReflect.Descriptor instead.
func (*BundleResultInternalError) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{16}
}

func (x *BundleResultInternalError) GetAuctionId() string {
	if x != nil {
		return x.AuctionId
	}
	return ""
}

func (x *BundleResultInternalError) GetDigest() [][]byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *BundleResultInternalError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message indicating a bundle auction failure.
type BundleResultAuctionFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Reason:
	//
	//	*BundleResultAuctionFailed_EstimateError
	//	*BundleResultAuctionFailed_InternalError
	Reason isBundleResultAuctionFailed_Reason `protobuf_oneof:"reason"`
}

func (x *BundleResultAuctionFailed) Reset() {
	*x = BundleResultAuctionFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResultAuctionFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResultAuctionFailed) ProtoMessage() {}

func (x *BundleResultAuctionFailed) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResultAuctionFailed.ProtoReflect.Descriptor instead.
func (*BundleResultAuctionFailed) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{17}
}

func (m *BundleResultAuctionFailed) GetReason() isBundleResultAuctionFailed_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (x *BundleResultAuctionFailed) GetEstimateError() *BundleResultAuctionFailedEstimate {
	if x, ok := x.GetReason().(*BundleResultAuctionFailed_EstimateError); ok {
		return x.EstimateError
	}
	return nil
}

func (x *BundleResultAuctionFailed) GetInternalError() *BundleResultInternalError {
	if x, ok := x.GetReason().(*BundleResultAuctionFailed_InternalError); ok {
		return x.InternalError
	}
	return nil
}

type isBundleResultAuctionFailed_Reason interface {
	isBundleResultAuctionFailed_Reason()
}

type BundleResultAuctionFailed_EstimateError struct {
	EstimateError *BundleResultAuctionFailedEstimate `protobuf:"bytes,1,opt,name=estimate_error,json=estimateError,proto3,oneof"` // Auction failed due to estimate error.
}

type BundleResultAuctionFailed_InternalError struct {
	InternalError *BundleResultInternalError `protobuf:"bytes,2,opt,name=internal_error,json=internalError,proto3,oneof"` // Auction failed due to internal error.
}

func (*BundleResultAuctionFailed_EstimateError) isBundleResultAuctionFailed_Reason() {}

func (*BundleResultAuctionFailed_InternalError) isBundleResultAuctionFailed_Reason() {}

// Message representing the result of a bundle submission.
type BundleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the bundle.
	// Types that are assignable to Result:
	//
	//	*BundleResult_Win
	//	*BundleResult_Loose
	//	*BundleResult_Drop
	//	*BundleResult_Failure
	Result isBundleResult_Result `protobuf_oneof:"result"`
}

func (x *BundleResult) Reset() {
	*x = BundleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleResult) ProtoMessage() {}

func (x *BundleResult) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleResult.ProtoReflect.Descriptor instead.
func (*BundleResult) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{18}
}

func (x *BundleResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *BundleResult) GetResult() isBundleResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *BundleResult) GetWin() *BundleResultAuctionWin {
	if x, ok := x.GetResult().(*BundleResult_Win); ok {
		return x.Win
	}
	return nil
}

func (x *BundleResult) GetLoose() *BundleResultAuctionLoose {
	if x, ok := x.GetResult().(*BundleResult_Loose); ok {
		return x.Loose
	}
	return nil
}

func (x *BundleResult) GetDrop() *BundleResultInterrupted {
	if x, ok := x.GetResult().(*BundleResult_Drop); ok {
		return x.Drop
	}
	return nil
}

func (x *BundleResult) GetFailure() *BundleResultAuctionFailed {
	if x, ok := x.GetResult().(*BundleResult_Failure); ok {
		return x.Failure
	}
	return nil
}

type isBundleResult_Result interface {
	isBundleResult_Result()
}

type BundleResult_Win struct {
	Win *BundleResultAuctionWin `protobuf:"bytes,2,opt,name=win,proto3,oneof"` // Bundle won the auction.
}

type BundleResult_Loose struct {
	Loose *BundleResultAuctionLoose `protobuf:"bytes,3,opt,name=loose,proto3,oneof"` // Bundle lost the auction.
}

type BundleResult_Drop struct {
	Drop *BundleResultInterrupted `protobuf:"bytes,4,opt,name=drop,proto3,oneof"` // Bundle was interrupted.
}

type BundleResult_Failure struct {
	Failure *BundleResultAuctionFailed `protobuf:"bytes,5,opt,name=failure,proto3,oneof"` // Bundle auction failed.
}

func (*BundleResult_Win) isBundleResult_Result() {}

func (*BundleResult_Loose) isBundleResult_Result() {}

func (*BundleResult_Drop) isBundleResult_Result() {}

func (*BundleResult_Failure) isBundleResult_Result() {}

var File_searcher_proto protoreflect.FileDescriptor

var file_searcher_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x09, 0x64, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3c, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x30, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1c, 0x57, 0x6f, 0x72, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x2a, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x89,
	0x01, 0x0a, 0x27, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0xea, 0x03, 0x0a, 0x13, 0x4d,
	0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x48, 0x00, 0x52, 0x09, 0x77, 0x6f, 0x72,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x50, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x7a, 0x0a, 0x1c, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x30, 0x48, 0x00, 0x52, 0x1c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4f, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4f, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x71, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4f, 0x70, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x48, 0x00, 0x52, 0x19, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x4f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1f, 0x0a, 0x1d,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a,
	0x16, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x4e, 0x61, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x22, 0x39, 0x0a, 0x18, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x6f, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x55,
	0x0a, 0x1c, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x17, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x6e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5b, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x42, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x21, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x6c, 0x0a, 0x19, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xc9, 0x01, 0x0a, 0x19, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x54, 0x0a,
	0x0e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x94, 0x02, 0x0a, 0x0c,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x03,
	0x77, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x77,
	0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x6c, 0x6f, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x6f, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x3f, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0xd0, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x27, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x39, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0b,
	0x2e, 0x64, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x1c, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x20,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_searcher_proto_rawDescOnce sync.Once
	file_searcher_proto_rawDescData = file_searcher_proto_rawDesc
)

func file_searcher_proto_rawDescGZIP() []byte {
	file_searcher_proto_rawDescOnce.Do(func() {
		file_searcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_searcher_proto_rawDescData)
	})
	return file_searcher_proto_rawDescData
}

var file_searcher_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_searcher_proto_goTypes = []any{
	(*AddressSubscriptionV0)(nil),                      // 0: searcher.AddressSubscriptionV0
	(*WorkchainSubscriptionV0)(nil),                    // 1: searcher.WorkchainSubscriptionV0
	(*WorkchainShardSubscriptionV0)(nil),               // 2: searcher.WorkchainShardSubscriptionV0
	(*ExternalOutMessageBodyOpcodeSubscriptionV0)(nil), // 3: searcher.ExternalOutMessageBodyOpcodeSubscriptionV0
	(*InternalMessageBodyOpcodeSubscriptionV0)(nil),    // 4: searcher.InternalMessageBodyOpcodeSubscriptionV0
	(*MempoolSubscription)(nil),                        // 5: searcher.MempoolSubscription
	(*SendBundleResponse)(nil),                         // 6: searcher.SendBundleResponse
	(*GetTipAddressesRequest)(nil),                     // 7: searcher.GetTipAddressesRequest
	(*GetTipAddressesResponse)(nil),                    // 8: searcher.GetTipAddressesResponse
	(*SubscribeBundleResultsRequest)(nil),              // 9: searcher.SubscribeBundleResultsRequest
	(*BundleResultAuctionWin)(nil),                     // 10: searcher.BundleResultAuctionWin
	(*BundleResultAuctionLoose)(nil),                   // 11: searcher.BundleResultAuctionLoose
	(*BundleResultPartiallyProcessed)(nil),             // 12: searcher.BundleResultPartiallyProcessed
	(*BundleResultPartiallyExpired)(nil),               // 13: searcher.BundleResultPartiallyExpired
	(*BundleResultInterrupted)(nil),                    // 14: searcher.BundleResultInterrupted
	(*BundleResultAuctionFailedEstimate)(nil),          // 15: searcher.BundleResultAuctionFailedEstimate
	(*BundleResultInternalError)(nil),                  // 16: searcher.BundleResultInternalError
	(*BundleResultAuctionFailed)(nil),                  // 17: searcher.BundleResultAuctionFailed
	(*BundleResult)(nil),                               // 18: searcher.BundleResult
	(*Bundle)(nil),                                     // 19: dto.Bundle
	(*MempoolPacket)(nil),                              // 20: dto.MempoolPacket
}
var file_searcher_proto_depIdxs = []int32{
	0,  // 0: searcher.MempoolSubscription.addresses:type_name -> searcher.AddressSubscriptionV0
	1,  // 1: searcher.MempoolSubscription.workchain:type_name -> searcher.WorkchainSubscriptionV0
	2,  // 2: searcher.MempoolSubscription.workchainShard:type_name -> searcher.WorkchainShardSubscriptionV0
	3,  // 3: searcher.MempoolSubscription.externalOutMessageBodyOpcode:type_name -> searcher.ExternalOutMessageBodyOpcodeSubscriptionV0
	4,  // 4: searcher.MempoolSubscription.internalMessageBodyOpcode:type_name -> searcher.InternalMessageBodyOpcodeSubscriptionV0
	12, // 5: searcher.BundleResultInterrupted.partially_processed:type_name -> searcher.BundleResultPartiallyProcessed
	13, // 6: searcher.BundleResultInterrupted.expired:type_name -> searcher.BundleResultPartiallyExpired
	15, // 7: searcher.BundleResultAuctionFailed.estimate_error:type_name -> searcher.BundleResultAuctionFailedEstimate
	16, // 8: searcher.BundleResultAuctionFailed.internal_error:type_name -> searcher.BundleResultInternalError
	10, // 9: searcher.BundleResult.win:type_name -> searcher.BundleResultAuctionWin
	11, // 10: searcher.BundleResult.loose:type_name -> searcher.BundleResultAuctionLoose
	14, // 11: searcher.BundleResult.drop:type_name -> searcher.BundleResultInterrupted
	17, // 12: searcher.BundleResult.failure:type_name -> searcher.BundleResultAuctionFailed
	9,  // 13: searcher.SearcherService.SubscribeBundleResults:input_type -> searcher.SubscribeBundleResultsRequest
	5,  // 14: searcher.SearcherService.SubscribeMempool:input_type -> searcher.MempoolSubscription
	19, // 15: searcher.SearcherService.SendBundle:input_type -> dto.Bundle
	7,  // 16: searcher.SearcherService.GetTipAddresses:input_type -> searcher.GetTipAddressesRequest
	18, // 17: searcher.SearcherService.SubscribeBundleResults:output_type -> searcher.BundleResult
	20, // 18: searcher.SearcherService.SubscribeMempool:output_type -> dto.MempoolPacket
	6,  // 19: searcher.SearcherService.SendBundle:output_type -> searcher.SendBundleResponse
	8,  // 20: searcher.SearcherService.GetTipAddresses:output_type -> searcher.GetTipAddressesResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_searcher_proto_init() }
func file_searcher_proto_init() {
	if File_searcher_proto != nil {
		return
	}
	file_dto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_searcher_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddressSubscriptionV0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WorkchainSubscriptionV0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WorkchainShardSubscriptionV0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ExternalOutMessageBodyOpcodeSubscriptionV0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*InternalMessageBodyOpcodeSubscriptionV0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MempoolSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SendBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetTipAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetTipAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SubscribeBundleResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultAuctionWin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultAuctionLoose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultPartiallyProcessed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultPartiallyExpired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultInterrupted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultAuctionFailedEstimate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultInternalError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResultAuctionFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*BundleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_searcher_proto_msgTypes[3].OneofWrappers = []any{}
	file_searcher_proto_msgTypes[4].OneofWrappers = []any{}
	file_searcher_proto_msgTypes[5].OneofWrappers = []any{
		(*MempoolSubscription_Addresses)(nil),
		(*MempoolSubscription_Workchain)(nil),
		(*MempoolSubscription_WorkchainShard)(nil),
		(*MempoolSubscription_ExternalOutMessageBodyOpcode)(nil),
		(*MempoolSubscription_InternalMessageBodyOpcode)(nil),
	}
	file_searcher_proto_msgTypes[14].OneofWrappers = []any{
		(*BundleResultInterrupted_PartiallyProcessed)(nil),
		(*BundleResultInterrupted_Expired)(nil),
	}
	file_searcher_proto_msgTypes[17].OneofWrappers = []any{
		(*BundleResultAuctionFailed_EstimateError)(nil),
		(*BundleResultAuctionFailed_InternalError)(nil),
	}
	file_searcher_proto_msgTypes[18].OneofWrappers = []any{
		(*BundleResult_Win)(nil),
		(*BundleResult_Loose)(nil),
		(*BundleResult_Drop)(nil),
		(*BundleResult_Failure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_searcher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_searcher_proto_goTypes,
		DependencyIndexes: file_searcher_proto_depIdxs,
		MessageInfos:      file_searcher_proto_msgTypes,
	}.Build()
	File_searcher_proto = out.File
	file_searcher_proto_rawDesc = nil
	file_searcher_proto_goTypes = nil
	file_searcher_proto_depIdxs = nil
}
